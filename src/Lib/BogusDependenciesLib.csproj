<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>Microsoft.Build.BogusDependencies</AssemblyName>
    <RootNamespace>Microsoft.Build.BogusDependencies</RootNamespace>
    <TargetFramework>netstandard2.0</TargetFramework>

    <Version>0.1.0.0-pre</Version>
    <PackageReleaseNotes>Initial release for testing integration with experimental C# compiler support.</PackageReleaseNotes>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IncludeSymbols>true</IncludeSymbols>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>

    <Company>Microsoft</Company>
    <Copyright>Copyright (c) Microsoft Corporation.</Copyright>
    <Description>Microsoft Bogus Dependency Analyzer</Description>
    <Product>Microsoft Open Source</Product>
    <Authors>Microsoft</Authors>
    <Description>BogusDependencies provides common code for analyzing C# compiler and C++ linker outputs to determine which inputs are not actually necessary to building the final output. These bogus dependencies can then be surfaced in tooling to feed back to developers to help reduce package and project-to-project references, reducing the build dependency graph and processing time to reduce overall build time.</Description>
    <PackageLicenseExpression></PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/microsoft/BogusDependencies</PackageProjectUrl>
    <RepositoryUrl>https://github.com/microsoft/BogusDependencies.git</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>MSBuild dependency dependencies graph packages C# CSC MSVC link</PackageTags>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_AddAnalyzersToOutput</TargetsForTfmSpecificContentInPackage>
    <NoWarn>$(NoWarn);NU5128</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources.Designer.cs" DesignTime="True" AutoGen="True" DependentUpon="Resources.resx" />
    <EmbeddedResource Update="Resources.resx" Generator="ResXFileCodeGenerator" LastGenOutput="Resources.Designer.cs" />
    <None Include="..\..\LICENSE" Pack="true" PackagePath="" />
    <None Include="tools\*.ps1" CopyToOutputDirectory="None" Pack="true" PackagePath="tools" />
    <None Include="build\*.props" CopyToOutputDirectory="None" Pack="true" PackagePath="build" />
  </ItemGroup>

  <Target Name="_AddAnalyzersToOutput">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\$(AssemblyName).dll" PackagePath="analyzers/dotnet/cs" />
    </ItemGroup>
  </Target>

</Project>
